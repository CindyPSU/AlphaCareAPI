
package TreatmentModel;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JOptionPane;

/**
 *
 * @author kmartin 
 */
public class InteractionsView extends javax.swing.JFrame {

    //Memento Pattern items
    Caretaker noteCaretaker = new Caretaker();
    Originator noteOriginator = new Originator();
    int savedNotes = 0;
    int currentNote = 0;
    
    //Interactions
    String firstDrug;
    String secondDrug; 
    String prescribedDrug;
    Boolean prescribed;
    
    /**
     * Creates new form InteractionsView
     */
    public InteractionsView() {
        initComponents();
        
        //Listeners
        ButtonListener saveListener = new ButtonListener();
        ButtonListener redoListener = new ButtonListener();
        ButtonListener undoListener = new ButtonListener();
        
        saveButton.addActionListener(saveListener);
        redoButton.addActionListener(redoListener);
        undoButton.addActionListener(undoListener);
        
        setBoxA();
        drug1.setSelectedItem(null);
        
        setBoxB();            
        drug2.setSelectedItem(null); 
        
        formatButton();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        theNote = new javax.swing.JTextArea();
        drug1 = new javax.swing.JComboBox<>();
        drug2 = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        compareButton = new javax.swing.JButton();
        noteLabel = new javax.swing.JLabel();
        saveButton = new javax.swing.JButton();
        undoButton = new javax.swing.JButton();
        redoButton = new javax.swing.JButton();
        prescribeButton = new javax.swing.JButton();
        closeButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocation(new java.awt.Point(525, 75));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("Interaction Checker");

        theNote.setColumns(20);
        theNote.setRows(5);
        jScrollPane3.setViewportView(theNote);

        drug1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                drug1ActionPerformed(evt);
            }
        });

        drug2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                drug2ActionPerformed(evt);
            }
        });

        jLabel2.setText("1. Select drug:");

        jLabel3.setText("2. Select drug:");

        jLabel4.setText("3. Check for interactions:");

        compareButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        compareButton.setText("Compare");
        compareButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                compareButtonActionPerformed(evt);
            }
        });

        noteLabel.setText("4. (Optional) Add note for patient regarding interactions:");

        saveButton.setText("Save");

        undoButton.setText("Undo");

        redoButton.setText("Redo");

        prescribeButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        prescribeButton.setForeground(new java.awt.Color(255, 0, 51));
        prescribeButton.setText("Prescribe!");
        prescribeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prescribeButtonActionPerformed(evt);
            }
        });

        closeButton.setText("Close");
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(prescribeButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(closeButton))
                    .addComponent(noteLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 252, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(saveButton)
                        .addGap(30, 30, 30)
                        .addComponent(undoButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(redoButton)
                        .addGap(23, 23, 23))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(drug2, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(compareButton)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(drug1, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addContainerGap(29, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(drug1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(drug2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addComponent(compareButton)
                .addGap(18, 18, 18)
                .addComponent(noteLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(saveButton)
                    .addComponent(undoButton)
                    .addComponent(redoButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(prescribeButton)
                    .addComponent(closeButton))
                .addGap(24, 24, 24))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void drug1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_drug1ActionPerformed
    }//GEN-LAST:event_drug1ActionPerformed

    private void drug2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_drug2ActionPerformed
    }//GEN-LAST:event_drug2ActionPerformed

    private void compareButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_compareButtonActionPerformed
        checkInteractions();
    }//GEN-LAST:event_compareButtonActionPerformed

    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
        super.dispose();
        System.exit(0);
    }//GEN-LAST:event_closeButtonActionPerformed

    private void prescribeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prescribeButtonActionPerformed
        prescribedDrug = getPrescribedDrug();
        System.out.println("You have successfully prescribed " + prescribedDrug + " to this patient.");
    }//GEN-LAST:event_prescribeButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InteractionsView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InteractionsView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InteractionsView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InteractionsView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InteractionsView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton closeButton;
    private javax.swing.JButton compareButton;
    private javax.swing.JComboBox<String> drug1;
    private javax.swing.JComboBox<String> drug2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel noteLabel;
    private javax.swing.JButton prescribeButton;
    private javax.swing.JButton redoButton;
    private javax.swing.JButton saveButton;
    private javax.swing.JTextArea theNote;
    private javax.swing.JButton undoButton;
    // End of variables declaration//GEN-END:variables
    
    //Set combobox1 drugs
    public void setBoxA(){
        drug1.addItem("Amoxicillan");
        drug1.addItem("Diphenhydramine");
        drug1.addItem("Warfarin");
    }
    
    //Set combobox2 drugs
    public void setBoxB(){
        drug2.addItem("Amoxicillan");
        drug2.addItem("Diphenhydramine");
        drug2.addItem("Warfarin");
    }
   
    //Return combobox1 selection
    public void getDrug1(){
        firstDrug = (String) drug1.getSelectedItem();
    }
    
    //Return combobox selection as String to prescribe
    public String getPrescribedDrug() {
        firstDrug = (String) drug1.getSelectedItem();
        return firstDrug;
    }
    
    //Return combobox2 selection
    public void getDrug2(){
        secondDrug = (String) drug2.getSelectedItem();  
    }

    //Check for interactions between the comboBox selections
    public void checkInteractions(){
        getDrug1();
        getDrug2();
        
        //Cycle through possible selections
        if (firstDrug == "Amoxicillan"){
            
            if(secondDrug == "Amoxicillan"){
                JOptionPane.showMessageDialog(null,"Please select a different drug for comparison!");
            }
            else if (secondDrug == "Diphenhydramine"){
                JOptionPane.showMessageDialog(null,"There are no interactions.");
            }
            else {  //if (secondDrug == "Warfarin"){
                JOptionPane.showMessageDialog(null,"There are potentially fatal interactions between these two medications!!!!");
            }
        }
        else if (secondDrug == "Warfarin") {
            
            if(firstDrug == "Amoxicillan"){
                JOptionPane.showMessageDialog(null,"Please select a different drug for comparison!");
            }
            else if(firstDrug == "Diphenhydramine"){
                JOptionPane.showMessageDialog(null,"There are no interactions.");
            }   
            else { //(firstDrug == "Warfarin")
                JOptionPane.showMessageDialog(null,"There are potentially fatal interactions between these two medications!!!!");
            }
        }
        else if (firstDrug == "Diphenhydramine") {
            if(secondDrug == "Amoxicillan"){
                JOptionPane.showMessageDialog(null,"There are no interactions.");
            }
            else if(secondDrug == "Diphenhydramine"){
                JOptionPane.showMessageDialog(null,"Please select a different drug for comparison!");
            }   
            else { 
                JOptionPane.showMessageDialog(null,"There are no interactions.");
            }
        }
        else if (secondDrug == "Warfarin") {
            if(firstDrug == "Amoxicillan"){
                JOptionPane.showMessageDialog(null,"There are potentially fatal interactions between these two medications!!!!");
            }
            else if(firstDrug == "Diphenhydramine"){
                JOptionPane.showMessageDialog(null,"There are no interactions.");
            }   
            else { 
                JOptionPane.showMessageDialog(null,"Please select a different drug for comparison!");
            }
        }
    }
    
    //Wrap the text
    public void formatButton(){
    noteLabel.setText("<html><left>" + "4. (Optional) Add note for patient regarding possible "
            + "interactions:" + "<br>" +"</left></html>");  
    }
   
    //Listeners
    
    //Set up actions upon selecting the Compare button
    public void compareButtonListener(ActionListener al){
        compareButton.addActionListener(al);
    }
    
    //Set up actions upon selecting the Prescribe button
    public void prescribeButtonListener(ActionListener al){
        prescribeButton.addActionListener(al);
    }
    
    //Set up actions upon selecting the Compare button
    public void closeButtonListener(ActionListener al){
        closeButton.addActionListener(al);
    }
    
    //Set up actions upon selecting Save, Redo or Undo buttons for Memento Design Pattern
    class ButtonListener implements ActionListener {

        @Override
        public void actionPerformed(ActionEvent evt) {
            
            //user chooses to save note
            if(evt.getSource() == saveButton){
                String noteText = theNote.getText();
                
                noteOriginator.set(noteText);
                noteCaretaker.addMemento(noteOriginator.storeInMemento());
                
                savedNotes++;
                currentNote++;
                
                System.out.println("Saved Notes " + savedNotes);
                
                undoButton.setEnabled(true);
                
            //user choose to undo note
            }else if(evt.getSource() == undoButton){
                if(currentNote >= 1){				

                    currentNote--;
                    String noteText = noteOriginator.restoreFromMemento(noteCaretaker.getMemento(currentNote) );
                    theNote.setText(noteText);
                   
                    System.out.println("Undo");
                    redoButton.setEnabled(true);} 
                
                else {undoButton.setEnabled(false);}
                
            //user chooses to redo the removal of the note
            }else if(evt.getSource() == redoButton){
                if((savedNotes - 1) > currentNote){
                    currentNote++;
                    String noteText = noteOriginator.restoreFromMemento(noteCaretaker.getMemento(currentNote));
                    theNote.setText(noteText);
                    
                    System.out.println("Redo");
                    undoButton.setEnabled(true);} 
                else{redoButton.setEnabled(false);}
            }   
        } 
    } 
}

